import java.util.regex.Matcher
import java.util.regex.Pattern

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        // Sdk
        min_sdk_version = 21
        target_sdk_version = 29
        build_tools_version = '29.0.2'

        // Core
        gradle_version = '4.0.0-alpha03'
        kotlin_version = '1.3.60'
        google_play_services_version = '4.3.2'
        fabric_io_tools_version = '1.31.0'

        // Base
        appcompat_version = '1.1.0'
        legacy_support_version = '1.0.0'
        constraint_layout_version = '1.1.3'
        material_version = '1.2.0-alpha01'
        androidx_core_version = '1.2.0-beta02'
        androidx_fragment_version = '1.2.0-rc02'

        // Android's Architecture Components
        androidx_architecture_components_version = '2.2.0-rc02'
        androidx_architecture_components_lifecycle_extensions_version = '2.2.0-rc02'

        // Databinding Library
        databinding_library_version = '3.2.0-alpha10'

        // Firebase Libraries
        firebase_core_version = '17.2.1'
        firebase_crashlytics_version = '2.10.1'
        firebase_auth_version = '19.1.0'

        // Google Play Services Auth
        play_services_auth_version = '17.0.0'

        // Retrofit
        retrofit_version = '2.6.2'

        // Dagger2
        dagger2_version = '2.25.2'

        // OkHTTP Logging interceptor
        okhttp_logging_interceptor_version = '4.2.2'

        // Testing
        test_runner_version = '1.2.0'
        test_espresso_core_version = '3.2.0'
        junit_version = '4.12'

        // RxJava
        rx_java_version = '2.2.14'
        rx_android_version = '2.1.1'

        // Glide
        glide_version = '4.10.0'

        // Navigation Component
        nav_version = '2.1.0'
    }


    def versionPatchAndNumber = 0

    ext.getCurrentFlavor = { ->
        Gradle gradle = getGradle()
        String tskReqStr = gradle.getStartParameter().getTaskRequests().toString()

        Pattern pattern

        if (tskReqStr.contains('assemble'))
            pattern = Pattern.compile('assemble(\\w+)(Release|Debug)')
        else
            pattern = Pattern.compile('generate(\\w+)(Release|Debug)')

        Matcher matcher = pattern.matcher(tskReqStr)

        if (matcher.find())
            return matcher.group(1).toLowerCase()
        else {
            println 'NO MATCH FOUND'
            return ''
        }
    }

    ext.versionPropsFile = file('app/version.properties')

    Properties versionProps = new Properties()

    versionProps.load(new FileInputStream(versionPropsFile))

    ext{
        version_major = 0
        version_minor = 0
        version_patch = versionProps['VERSION_PATCH'].toInteger() + versionPatchAndNumber
        version_build = versionProps['VERSION_BUILD'].toInteger() + 1
        version_number = versionProps['VERSION_NUMBER'].toInteger() + versionPatchAndNumber
    }

    versionProps['VERSION_PATCH'] = version_patch.toString()
    versionProps['VERSION_BUILD'] = version_build.toString()
    versionProps['VERSION_NUMBER'] = version_number.toString()

    versionProps.store(versionPropsFile.newWriter(), null)

    repositories {
        google()
        jcenter()
        maven{ url 'https://maven.fabric.io/public' }
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    }

    dependencies {
        classpath "com.android.tools.build:gradle:${gradle_version}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.google.gms:google-services:$google_play_services_version"
        classpath "io.fabric.tools:gradle:$fabric_io_tools_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven{ url 'https://maven.fabric.io/public' }
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
